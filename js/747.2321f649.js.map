{"version":3,"file":"js/747.2321f649.js","mappings":"2LAEIA,EAAAA,EAAAA,GAAgC,UAA5B,0BAAuB,G,GAGzBA,EAAAA,EAAAA,GAAgC,SAAzBC,IAAI,SAAQ,SAAK,G,aAMxBD,EAAAA,EAAAA,GAAoC,SAA7BC,IAAI,YAAW,UAAM,G,kCAMzBC,MAAM,e,GAGXF,EAAAA,EAAAA,GAA4E,eAArEA,EAAAA,EAAAA,GAAK,OAAgE,QAAhE,mCAA8BA,EAAAA,EAAAA,GAAK,OAA6B,QAA7B,2BAA/C,G,0CAnBFG,EAAAA,EAAAA,IAoBO,QApBDD,MAAM,OAAQE,SAAM,wCAAUC,EAAAA,UAAAA,EAAAA,SAAAA,MAAAA,EAAAA,aAAQ,eAA5C,CACEC,GAEAN,EAAAA,EAAAA,GAIM,OAJAE,OAAKK,EAAAA,EAAAA,IAAAA,CAAAA,eAAAA,CAAAC,QAA6BH,EAAAA,WAAxC,CACEI,GAAAA,EAAAA,EAAAA,KACAT,EAAAA,EAAAA,GAA6D,SAAtDU,KAAK,QAAQC,GAAG,Q,qDAAiBN,EAAAA,MAAKO,IAAGC,OAAI,8BAAER,EAAAA,OAAAA,EAAAA,MAAAA,MAAAA,EAAAA,cAAtD,iBAAwCA,EAAAA,SAC3BA,EAAAA,SAAAA,EAAAA,EAAAA,OAAbF,EAAAA,EAAAA,IAAyC,QAAAW,GAAAC,EAAAA,EAAAA,IAAjBV,EAAAA,QAAM,KAA9B,gBAHF,IAMAL,EAAAA,EAAAA,GAIM,OAJAE,OAAKK,EAAAA,EAAAA,IAAAA,CAAAA,eAAAA,CAAAC,QAA6BH,EAAAA,WAAxC,CACEW,GAAAA,EAAAA,EAAAA,KACAhB,EAAAA,EAAAA,GAAsE,SAA/DU,KAAK,WAAWC,GAAG,W,qDAAoBN,EAAAA,SAAQO,IAAGC,OAAI,8BAAER,EAAAA,OAAAA,EAAAA,MAAAA,MAAAA,EAAAA,cAA/D,iBAA8CA,EAAAA,YACjCA,EAAAA,SAAAA,EAAAA,EAAAA,OAAbF,EAAAA,EAAAA,IAAyC,QAAAc,GAAAF,EAAAA,EAAAA,IAAjBV,EAAAA,QAAM,KAA9B,gBAHF,IAMAL,EAAAA,EAAAA,GAAsG,UAA9FE,MAAM,cAAcQ,KAAK,SAAUQ,SAAUb,EAAAA,cAAgBA,EAAAA,mBAAmB,QAAK,EAAAc,GAC9Dd,EAAAA,oBAAAA,EAAAA,EAAAA,OAA/BF,EAAAA,EAAAA,IAEM,MAFN,EAAkD,oEAAlD,eAGAiB,GAnBF,I,sGCKK,SAASC,IACd,IAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MACf,GAAkDC,EAAAA,EAAAA,MAA3CC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,aAAcC,EAAnC,EAAmCA,YAEnC,GAAgEC,EAAAA,EAAAA,IAC9D,QACAC,EAAAA,KAEGC,OACAC,SAAS,4BACTC,MAAM,uCANGA,EAAd,EAAOC,MAA4BC,EAAnC,EAAqBC,aAAkCC,EAAvD,EAA2CC,WASrCC,EAAa,EAEnB,GAAmEV,EAAAA,EAAAA,IACjE,WACAC,EAAAA,KAEGC,OACAC,SAAS,6BACTQ,IAAID,EAJP,sCAIkDA,EAJlD,eAFYE,EAAd,EAAOP,MAA+BQ,EAAtC,EAAwBN,aAAkCO,EAA1D,EAA8CL,WASxCM,GAAoBC,EAAAA,EAAAA,KAAS,kBAAMjB,EAAYM,OAAS,MAE9DY,EAAAA,EAAAA,IAAMF,GAAmB,SAAAG,GACnBA,GACFC,YAAW,kBAAMpB,EAAYM,MAAQ,IAAG,SAI5C,IAAM/B,EAAWuB,EAAY,yCAAC,WAAMuB,GAAN,gGAEpB5B,EAAM6B,SAAS,aAAcD,GAFT,OAG1B1B,EAAO4B,KAAK,KAHc,0GAAD,uDAQ7B,MAAO,CACLlB,MAAAA,EACAQ,SAAAA,EACAN,OAAAA,EACAO,OAAAA,EACAL,MAAAA,EACAM,MAAAA,EACAxC,SAAAA,EACAwB,aAAAA,EACAiB,kBAAAA,GD1BJ,SACEQ,MADa,WAEX,IAAMC,GAAQC,EAAAA,EAAAA,MACRjC,GAAQC,EAAAA,EAAAA,MAQd,OANI+B,EAAME,MAAMC,SACdnC,EAAM6B,SAAS,aAAc,CAC3BhB,OAAOuB,EAAAA,EAAAA,GAAMJ,EAAME,MAAMC,SACzB/C,KAAM,aAGH,UAAIW,O,cEpCf,MAAMsC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE","sources":["webpack://vue-practice-app/./src/views/Auth.vue","webpack://vue-practice-app/./src/use/login-form.js","webpack://vue-practice-app/./src/views/Auth.vue?30a9"],"sourcesContent":["<template>\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\n    <h1>Войти в  личный кабинет</h1>\n\n    <div :class=\"['form-control', {invalid: eError}]\">\n      <label for=\"email\">Email</label>\n      <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\">\n      <small v-if=\"eError\">{{ eError }}</small>\n    </div>\n\n    <div :class=\"['form-control', {invalid: pError}]\">\n      <label for=\"password\">Пароль</label>\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\">\n      <small v-if=\"pError\">{{ pError }}</small>\n    </div>\n\n    <button class=\"btn primary\" type=\"submit\" :disabled=\"isSubmitting || isTooManyAttempts\">Войти</button>\n    <div class=\"text-danger\" v-if=\"isTooManyAttempts\">\n      Вы слишком часто пытаетесь войти в систему. Попробуйте позже\n    </div>\n    <small><br/> email для входа: 'A@mail.ru';<br/> пароль: '123456789';</small>\n  </form>\n</template>\n\n<script>\nimport {useRoute} from 'vue-router'\nimport {useStore} from 'vuex'\nimport {error} from '../utils/error'\nimport {useLoginForm} from '../use/login-form'\n\nexport default {\n  setup() {\n    const route = useRoute()\n    const store = useStore()\n\n    if (route.query.message) {\n      store.dispatch('setMessage', {\n        value: error(route.query.message),\n        type: 'warning'\n      })\n    }\n    return {...useLoginForm()}\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n","import {useField, useForm} from 'vee-validate'\nimport * as yup from 'yup'\nimport {computed, watch} from 'vue'\nimport {useStore} from 'vuex'\nimport {useRouter} from 'vue-router'\n\nexport function useLoginForm() {\n  const store = useStore()\n  const router = useRouter()\n  const {handleSubmit, isSubmitting, submitCount} = useForm()\n\n  const {value: email, errorMessage: eError, handleBlur: eBlur} = useField(\n    'email',\n    yup\n      .string()\n      .trim()\n      .required('Пожалуйста введите email')\n      .email('Необходимо ввести корректный email')\n  )\n\n  const MIN_LENGTH = 6\n\n  const {value: password, errorMessage: pError, handleBlur: pBlur} = useField(\n    'password',\n    yup\n      .string()\n      .trim()\n      .required('Пожалуйста введите пароль')\n      .min(MIN_LENGTH, `Пароль не может быть меньше ${MIN_LENGTH} символов`)\n  )\n\n  const isTooManyAttempts = computed(() => submitCount.value >= 3)\n\n  watch(isTooManyAttempts, val => {\n    if (val) {\n      setTimeout(() => submitCount.value = 0, 1500)\n    }\n  })\n\n  const onSubmit = handleSubmit(async values => {\n    try {\n      await store.dispatch('auth/login', values)\n      router.push('/')\n    } catch (e) {\n    }\n  })\n\n  return {\n    email,\n    password,\n    eError,\n    pError,\n    eBlur,\n    pBlur,\n    onSubmit,\n    isSubmitting,\n    isTooManyAttempts\n  }\n}","import { render } from \"./Auth.vue?vue&type=template&id=6ed80eaf\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Андрей\\\\Downloads\\\\CRM-main\\\\CRM-main\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","for","class","_createElementBlock","onSubmit","_ctx","_hoisted_1","_normalizeClass","invalid","_hoisted_2","type","id","$event","onBlur","_hoisted_3","_toDisplayString","_hoisted_4","_hoisted_5","disabled","_hoisted_6","_hoisted_8","useLoginForm","store","useStore","router","useRouter","useForm","handleSubmit","isSubmitting","submitCount","useField","yup","trim","required","email","value","eError","errorMessage","eBlur","handleBlur","MIN_LENGTH","min","password","pError","pBlur","isTooManyAttempts","computed","watch","val","setTimeout","values","dispatch","push","setup","route","useRoute","query","message","error","__exports__","render"],"sourceRoot":""}